name: Deploy Website

on:
  push:
    branches: [ main ]  

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: eu-west-1
      S3_BUCKET: personal-resume-website-tatofs
      
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Build website
        run: |
          echo "next step"

      - name: Deploy infrastructure
        working-directory: ./infrastructure
        run: |
          terraform init
          terraform apply -auto-approve -replace="aws_cloudfront_distribution.website" -replace="aws_route53_zone.website"

      - name: Sync files to S3
        run: |
          aws s3 sync ./website s3://${{ env.S3_BUCKET }}

      - name: Get CloudFront Distribution ID
        id: get-cloudfront-distribution-id
        working-directory: ./infrastructure
        run: |
          DIST_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "CLOUDFRONT_DISTRIBUTION_ID=$DIST_ID" >> $GITHUB_ENV
        

      - name: Invalidate CloudFront Cache
        run: |
          if [ -n "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" --paths "/*"
          else
            echo "Failed to get CloudFront distribution ID"
            exit 1
          fi
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}

      - name: Run Cypress tests
        run: |
          echo "No Cypress tests added yet"